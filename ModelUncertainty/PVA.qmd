---
title: "PopulationViabilityAnalysis"
author: "Ruowen Xiao"
format: html
---

## Introduction

Equation:

$$
B_t = B_{t-1} \cdot e^{π - δ \cdot B_{t-1} + S_t} - C_t
$$

-   $B_t$: Biomass at time t
-   $C_t$: Catch at time t
-   $S_t$: $S_t \sim N(0, σ)$ natural variability due to weather and climate
-   π: intrinsic growth rate
-   δ: density depends

1.  Extinction probability given value on π, δ, σ and $B_0$ and C
2.  Derive likelihood at extinction over 3 generations(quasi-extinction threshold)
3.  \*Conclude the in probability

## Modeling

```{r}
library("ggplot2")
```

```{r}
# parameters
p = 0.5
delta = 0.002
sigma = 0.25

# input variables
B0 = 250
C = 22
GL = 30
time = 0:GL
qext = 10

B = rep(0, GL+1)
B[1] = B0
```

### Simple

```{r}
for (t in 1:GL) {
  # equation of Biomass
  B[t+1] <- B[t] * exp(p - delta * B[t] + rnorm(1, 0, sigma)) - C
  B[t+1] = max(0, B[t+1])
}
```

```{r}
plot(time, B, ylab = "biomass", type = "l", ylim = c(0,500))
abline(h = qext, col = "darkred")
```

### Multiple

```{r}
# model multiple times
niter = 100
below = rep(0, niter) # counter of quasi-extinction

for (i in 1:niter) {
  for (t in 1:GL) {
    # equation of Biomass
    B[t+1] <- B[t] * exp(p - delta * B[t] + rnorm(1, 0, sigma)) - C
    B[t+1] = max(0, B[t+1])
  }
  below[i] = max(B < qext)
  if(i == 1) {
    plot(time, B, ylab = "biomass", type = "l", ylim = c(0,500))
  } else {
    lines(time, B)
  }
}
abline(h = qext, col = "darkred")

quasi_extinction_risk = mean(below)
mtext(quasi_extinction_risk)
```

```{r}
quasi_extinction_risk
```

### Robust

```{r}
niter = 100
par <- data.frame(p = 0.5, delta = 0.002, sigma = 0.25)

calc_risk <- function(par) {
  below = rep(0, niter) # counter of quasi-extinction
  for (i in 1:niter) {
    for (t in 1:GL) {
      # equation of Biomass
      B[t+1] <- B[t] * exp(par$p - par$delta * B[t] + rnorm(1, 0, par$sigma)) - C
      B[t+1] = max(0, B[t+1])
    }
    below[i] = max(B < qext)
  }
  return (mean(below))
}
```

```{r}
niter_rep <- 20
df_sim <- data.frame(ext_risk <- replicate(niter_rep, calc_risk(par)))
```

```{r}
summary(df_sim$ext_risk)
```

```{r}
ggplot(df_sim, aes(y=ext_risk)) +
         geom_boxplot()
```

### Monte Carlo Simulation

```{r}
# Uncertainty in parameters
niter = 100
par <- data.frame(p = 0.5, delta = 0.002, sigma = 0.25)

calc_risk <- function(par) {
  below = rep(0, niter) # counter of quasi-extinction
  for (i in 1:niter) {
    for (t in 1:GL) {
      # equation of Biomass
      B[t+1] <- B[t] * exp(par$p - par$delta * B[t] + rnorm(1, 0, par$sigma)) - C
      B[t+1] = max(0, B[t+1])
    }
    below[i] = max(B < qext)
  }
  return (mean(below))
}
```

```{r}
niter_epi <- 1000

df_par <- data.frame(p = rnorm(n = niter_epi, mean = 0.5, sd = 0.005),
  delta = rnorm(n = niter_epi, mean = 0.002, sd = 0.0002),
  sigma = rlnorm(n = niter_epi, mean = log(0.25), sd = 0.1), # log-normal distribution
  iter =  1:niter_epi)
```

```{r}
# calculate 
ext_risk = rep(0, niter_epi)

for (j in 1:niter_epi) {
  ext_risk[j] = calc_risk(df_par[j,]) 
}

df_mc = data.frame(df_par, ext_risk=ext_risk)
```

```{r}
ggplot(df_mc, aes(x=ext_risk)) +
  # geom_histogram() +
  geom_density() +
  geom_vline(xintercept=quantile(df_mc$ext_risk, probs = 0.95), col = "#ed1b0c")
```
```{r}
plot(df_mc)
cor(df_mc)
```


1) True, 7
2) False, 5
3) False, 6














